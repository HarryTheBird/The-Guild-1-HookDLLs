{
  "version": "2.0.0",

  "tasks": [
      {
      "label": "Build hook_kernel32.dll",
      "type": "shell",
      "command": "cl.exe",
      "args": [
        "/LD",                                      // erstellt eine DLL
        "/EHsc",                                    // C++ Exceptions
        // Source
        "src\\kernel32_proxy.c",
        // MinHook-Header
        "/I", "${workspaceFolder}\\MinHook\\include",
        // Linker-Aufruf
        "/link",
          "/LIBPATH:${workspaceFolder}\\MinHook\\lib",
          "MinHook.x86.lib",
          "kernel32.lib",
          // DEF und Output
          "/DEF:${workspaceFolder}\\kernel32\\kernel32.def",
          "/OUT:${workspaceFolder}\\bin\\hook_kernel32.dll"
      ],
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "group": { "kind": "build", "isDefault": true },
      "problemMatcher": ["$msCompile"]
    },
    {
      "label": "Build hook_ws2_32.dll",
      "type": "shell",
      "command": "cl.exe",
      "args": [
        "/LD",
        "/EHsc",
        "src\\ws2_32_proxy.c",
        "/I", "${workspaceFolder}\\MinHook\\include",
        "/link",
          "/LIBPATH:${workspaceFolder}\\MinHook\\lib",
          "MinHook.x86.lib",
          "Ws2_32.lib",
          "Shlwapi.lib",
          "User32.lib",
          "/DEF:${workspaceFolder}\\ws2_32\\ws2_32.def",
          "/OUT:${workspaceFolder}\\bin\\hook_ws2_32.dll"
      ],
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "group":{"kind":"build"},
      "problemMatcher":["$msCompile"]
    },
    {
  "label": "Build hook_server.dll",
  "type": "shell",
  "command": "cl",
  "args": [
    "/LD",
    "src\\server_proxy.c",
    "/Iextern\\minhook\\include",
    "/link",
          "/LIBPATH:${workspaceFolder}\\MinHook\\lib",
          "MinHook.x86.lib",
          "Shlwapi.lib",
          "legacy_stdio_definitions.lib",
    "/OUT:bin\\hook_server.dll"
  ],
  "options": { "cwd": "${workspaceFolder}" },
  "problemMatcher": ["$msCompile"]
  },
      "group": { "kind": "build", "isDefault": true },
      "problemMatcher": ["$msCompile"]
    },  
      {
      "label": "Build All Proxies",
      "dependsOn": [
        "Build ws2_32 proxy",
        "Build kernel32 proxy"
        "Build server proxy"
      ],
      "group": { "kind": "build", "isDefault": false }}
  ]
}
